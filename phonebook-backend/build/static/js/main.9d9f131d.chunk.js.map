{"version":3,"sources":["services/persons.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","create","person","post","deletePerson","id","delete","update","updatedPerson","put","Persons","persons","filter","deleteHandlerCreator","name","toLowerCase","includes","map","number","onClick","PersonForm","props","onSubmit","submitHandler","value","newName","onChange","nameChangeHander","newNumber","numberChangeHandler","type","Filter","filterChangeHandler","Notification","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","message","App","useState","setPersons","setNewName","setNewNumber","setFilter","notification","innerSetNotification","setNotification","notif","setTimeout","useEffect","event","target","preventDefault","existingUsers","length","newEntry","concat","existingUser","window","confirm","updatedEntry","catch","e","showUpdateDialog","personToDelete","deletedPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d9f131d.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then((response) => response.data);\r\n};\r\n\r\nconst create = (person) => {\r\n  return axios.post(baseUrl, person).then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst update = (updatedPerson) => {\r\n    return axios.put(`${baseUrl}/${updatedPerson.id}`, updatedPerson).then(response => response.data)\r\n}\r\n\r\nconst personService = { getAll, create, deletePerson, update };\r\nexport default personService;\r\n","const Persons = ({ persons, filter, deleteHandlerCreator }) => {\r\n  return (\r\n    <div>\r\n      <h2>Numbers</h2>\r\n      {persons\r\n        .filter((person) =>\r\n          person.name.toLowerCase().includes(filter.toLowerCase())\r\n        )\r\n        .map((person) => (\r\n          <div key={person.name}>\r\n            {person.name} {person.number}&nbsp;\r\n            <button onClick={deleteHandlerCreator(person)}>Delete</button>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","const PersonForm = (props) => {\r\n    return (\r\n      <div>\r\n        <h2>Add new</h2>\r\n        <form onSubmit={props.submitHandler}>\r\n          <div>\r\n            name:&nbsp;\r\n            <input value={props.newName} onChange={props.nameChangeHander} />\r\n          </div>\r\n          <div>\r\n            number:&nbsp;\r\n            <input value={props.newNumber} onChange={props.numberChangeHandler} />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default PersonForm;","const Filter = ({ filter, filterChangeHandler }) => {\r\n    return (\r\n      <div>\r\n        filter shown with: <input value={filter} onChange={filterChangeHandler} />\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Filter;","const Notification = ({ data }) => {\r\n  if (data == null) {\r\n    return null;\r\n  }\r\n  const style = {\r\n    color: data.type === \"success\" ? \"green\" : \"red\",\r\n    background: \"lightgrey\",\r\n    fontSize: \"20px\",\r\n    borderStyle: \"solid\",\r\n    borderRadius: \"5px\",\r\n    padding: \"10px\",\r\n    marginBottom: \"10px\",\r\n  };\r\n\r\n  return <div style={style}>{data.message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useEffect, useState } from \"react\";\nimport personService from \"./services/persons\";\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notification, innerSetNotification] = useState(null);\n\n  const setNotification = (notif) => {\n    setTimeout(() => {\n      innerSetNotification(null);\n    }, 3000);\n    innerSetNotification(notif);\n  };\n\n  const showUpdateDialog = (existingUser) => {\n    if (\n      window.confirm(\n        `${newName} is already added to phonebook, do you want to update the phone number?`\n      )\n    ) {\n      const updatedEntry = { ...existingUser, number: newNumber };\n      personService\n        .update(updatedEntry)\n        .then((updatedPerson) => {\n          setPersons(\n            persons.map((person) =>\n              person.id === updatedPerson.id ? updatedPerson : person\n            )\n          );\n          setNotification({\n            message: `Updated phone number of ${updatedPerson.name}.`,\n            type: \"success\",\n          });\n        })\n        .catch((e) =>\n          setNotification({\n            message: `${updatedEntry.name} was already removed from the server.`,\n            type: \"error\",\n          })\n        );\n    }\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const existingUsers = persons.filter((person) => person.name === newName);\n    if (existingUsers.length !== 0) {\n      showUpdateDialog(existingUsers[0]);\n      return;\n    }\n    const newEntry = {\n      name: newName,\n      number: newNumber,\n    };\n    personService.create(newEntry).then((response) => {\n      setPersons(persons.concat(response));\n      setNotification({ message: `Added ${response.name}.`, type: \"success\" });\n    });\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const deleteHandlerCreator = (personToDelete) => {\n    return () => {\n      const result = window.confirm(`Delete ${personToDelete.name}?`);\n      if (result) {\n        personService.deletePerson(personToDelete.id).then((deletedPerson) => {\n          setPersons(\n            persons.filter((person) => person.id !== deletedPerson.id)\n          );\n          setNotification({\n            message: `Deleted ${personToDelete.name}.`,\n            type: \"success\",\n          });\n        });\n      }\n    };\n  };\n\n  useEffect(() => {\n    personService.getAll().then((persons) => setPersons(persons));\n  }, []);\n\n  const nameChangeHander = (event) => setNewName(event.target.value);\n  const numberChangeHandler = (event) => setNewNumber(event.target.value);\n  const filterChangeHandler = (event) => setFilter(event.target.value);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification data={notification} />\n      <Filter filter={filter} filterChangeHandler={filterChangeHandler} />\n      <PersonForm\n        submitHandler={submitHandler}\n        newName={newName}\n        nameChangeHander={nameChangeHander}\n        newNumber={newNumber}\n        numberChangeHandler={numberChangeHandler}\n      />\n      <Persons\n        persons={persons}\n        filter={filter}\n        deleteHandlerCreator={deleteHandlerCreator}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}